version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - csharp-minimal-stack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -u admin -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin-dev-setup/output/servers.json:/pgadmin4/servers.json
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - csharp-minimal-stack

  api:
    build:
      context: ./src/Api
      dockerfile: Dockerfile
    container_name: api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8081
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
    ports:
      - "8081:8081"
    # depends_on:
    # postgres:
    #   condition: service_healthy
    networks:
      - csharp-minimal-stack
    volumes:
      - ./src/Api:/app/src

networks:
  csharp-minimal-stack:
    driver: bridge
